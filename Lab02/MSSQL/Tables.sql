CREATE DATABASE EDITION;

USE EDITION;

CREATE TABLE AUTHOR (
    ID INT PRIMARY KEY IDENTITY (1, 1),
    FIRST_NAME NVARCHAR(50) NOT NULL,
    LAST_NAME NVARCHAR(50) NOT NULL,
    PATRONYMIC NVARCHAR(50) NOT NULL,
    COUNTRY NVARCHAR(50) NOT NULL
);

CREATE TABLE GENRE (
    ID INT PRIMARY KEY IDENTITY (1, 1),
    NAME NVARCHAR(50) NOT NULL,
    AGE_RATING NVARCHAR(10) NOT NULL
);

CREATE TABLE BOOK (
    ID INT PRIMARY KEY IDENTITY (1, 1),
    NAME NVARCHAR(100) NOT NULL,
    AUTHOR_ID INT NOT NULL,
    YEAR_OF_PUBLISHING INT NOT NULL,
    GENRE_ID INT NOT NULL,
    FOREIGN KEY (AUTHOR_ID) REFERENCES AUTHOR(ID),
    FOREIGN KEY (GENRE_ID) REFERENCES GENRE(ID)
);


CREATE TABLE CUSTOMER (
    ID INT PRIMARY KEY IDENTITY (1, 1),
    FIRST_NAME NVARCHAR(70) NOT NULL,
    LAST_NAME NVARCHAR(70) NOT NULL,
    PATRONYMIC NVARCHAR(70) NOT NULL,
    PHONE_NUMBER VARCHAR(20) NOT NULL,
    EMAIL VARCHAR(70) NOT NULL,
    TYPE NVARCHAR(20) NOT NULL CHECK (TYPE IN (N'Юридическое лицо', N'Физическое лицо'))
);

CREATE TABLE BOOK_CHARACTERISTICS (
    ID INT PRIMARY KEY IDENTITY (1, 1),
    COVER_TYPE NVARCHAR(50) NOT NULL,
    PAPER_TYPE NVARCHAR(50) NOT NULL,
    BINDING_TYPE NVARCHAR(50) NOT NULL,
    NUMBER_OF_PAGES INT NOT NULL,
    PAPER_SIZE NVARCHAR(50) NOT NULL
);

CREATE TABLE BOOK_ORDER (
    ID INT PRIMARY KEY IDENTITY (1, 1),
    BOOK_ID INT NOT NULL,
    CUSTOMER_ID INT NOT NULL,
    BOOK_CHARACTERISTICS_ID INT NOT NULL,
    DATE_OF_ORDER DATE NOT NULL,
    EDITION INT NOT NULL,
    TOTAL_PRICE DECIMAL(10, 2) NOT NULL,
    STATUS NVARCHAR(20) NOT NULL CHECK (STATUS IN (N'Создан', N'В работе', N'Готов')),
    FOREIGN KEY (BOOK_ID) REFERENCES BOOK(ID),
    FOREIGN KEY (CUSTOMER_ID) REFERENCES CUSTOMER(ID),
    FOREIGN KEY (BOOK_CHARACTERISTICS_ID) REFERENCES BOOK_CHARACTERISTICS(ID)
);
